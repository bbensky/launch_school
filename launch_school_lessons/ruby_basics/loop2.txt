1. 

count = 0

loop do
  puts "#{count} is an odd number." if count.odd?
  puts "#{count} is an even number." if count.even?
  count += 1
  break if count > 5
end

1. alt 

count = 0

loop do
  if count.odd?
    puts "#{count} is odd!"
  else
    puts "#{count} is even!"
  end  
  break if count == 5
  count += 1
end

2. 

loop do
  number = rand(100)
  puts number
  break if number <= 10
end

2. alt

loop do
  number = rand(100)
  puts number
  break if (0..10).include?(number)
end

2. alt 2

loop do
  number = rand(100)
  puts number
  break if number.between?(0, 10)
end

3.

  process_the_loop = [true, false].sample

  if process_the_loop
    loop do
      puts "The loop was processed!"
      break
    end
  else 
    puts "The loop wasn't processed!"  
  end

4.

loop do
  puts 'What does 2 + 2 equal?'
  answer = gets.chomp.to_i
  if answer == 4
    puts "That's correct!"
    break
  end

  puts "Wrong answer. Try again!"
end

5.

numbers = []

loop do
  puts 'Enter any number:'
  input = gets.chomp.to_i
  numbers << input
  break if numbers.size == 5
end

puts numbers

5. alt

numbers = []

loop do
  puts 'Enter any number:'
  input = gets.chomp.to_i
  numbers.push(input)
  break if numbers.size == 5
end

puts numbers

6.

names = ['Sally', 'Joe', 'Lisa', 'Henry']

loop do
  puts names.shift
  break if names.size == 0
end

6. a

names = ['Sally', 'Joe', 'Lisa', 'Henry']

loop do
  puts names.shift
  break if names.empty?
end


6. b (last to first)

names = ['Sally', 'Joe', 'Lisa', 'Henry']

loop do
  puts names.pop
  break if names.empty?
end

7. 

5.times do |index|
  puts index
  break if index == 2
end

8.

number = 0

until number == 10
  number += 1
  next if number.odd?
  puts number
end

9. 

number_a = 0
number_b = 0
loop do
  number_a += rand(2)
  number_b += rand(2)
  next unless number_a == 5 || number_b == 5
  puts "5 was reached!"
  break
end

9. a

number_a = 0
number_b = 0

loop do
  number_a += rand(2)
  number_b += rand(2)
  if number_a < 5 && number_b < 5
    next
  else  
    puts '5 was reached!'
    break
  end
  
end

10.


def greeting (greetings)
  count = 0
  while count < greetings
    puts 'Hello!'
    count += 1
  end
end

number_of_greetings = 2

greeting(number_of_greetings)

10. a.

def greeting
  puts 'Hello!'
end

number_of_greetings = 2

count = 0

while count < number_of_greetings
  greeting
  count += 1
end

10. b.

def greeting
  puts 'Hello!'
end

number_of_greetings = 2

while number_of_greetings > 0
  greeting
  number_of_greetings -= 1
end

